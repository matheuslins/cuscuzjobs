# Generated by Django 2.2 on 2019-04-27 18:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import apps.users_auth.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('company', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DefaultUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users_auth/images', verbose_name='Imagem')),
                ('username', models.CharField(blank=True, max_length=100, null=True, verbose_name='Username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('is_active', models.BooleanField(blank=True, default=True, verbose_name='Está ativo?')),
                ('is_staff', models.BooleanField(blank=True, default=False, verbose_name='É da equipe?')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de Entrada')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', apps.users_auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('defaultuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Candidate',
                'verbose_name_plural': 'Candidates',
            },
            bases=('users_auth.defaultuser',),
            managers=[
                ('objects', apps.users_auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TechRecruiter',
            fields=[
                ('defaultuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tech_recruiter_company', to='company.Company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Tech Recruiter',
                'verbose_name_plural': 'Tech Recruiteis',
            },
            bases=('users_auth.defaultuser',),
            managers=[
                ('objects', apps.users_auth.models.UserManager()),
            ],
        ),
    ]
